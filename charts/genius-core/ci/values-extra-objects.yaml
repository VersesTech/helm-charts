license:
  keyExistingSecret:
    name: genius-core-license
    key: licenseKey
  tls:
    existingSecret:
      name: genius-core-cert
      certKey: tls.crt
      keyKey: tls.key
      caKey: ca.crt
extraObjects:
  - |-
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: "{{ include "genius-core.fullname" . }}-license"
      namespace: {{ .Release.Namespace | quote }}
      labels:
        {{- include "genius-core.labels" . | nindent 4 }}
    spec:
      secretStoreRef:
        name: application-store
        kind: ClusterSecretStore
      refreshInterval: 30m
      target:
        name: "{{ include "genius-core.fullname" . }}-license"
        creationPolicy: Owner
      data:
        - secretKey: licenseKey
          remoteRef:
            key: sandbox/genius-core/dev/license-key
            property: licenseKey
  - |-
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: "{{ include "genius-core.fullname" . }}-cert"
      namespace: {{ .Release.Namespace | quote }}
    spec:
      secretName: "{{ include "genius-core.fullname" . }}-cert"
      duration: 8760h0m0s # 1y
      renewBefore: 720h0m0s # 1m
      revisionHistoryLimit: 10
      subject:
        organizations:
          - versestech
      privateKey:
        algorithm: Ed25519
        encoding: PKCS8
        rotationPolicy: Always
      usages:
        - digital signature
        - key encipherment
        - client auth
      dnsNames:
        - "{{ include "genius-core.fullname" . }}.{{ .Release.Namespace }}"
      issuerRef:
        kind: ClusterIssuer
        name: cluster-verses-intermediate-ca-genius-license-server-nonprod
