# -- Externally reachable domai
externalDomain: chart-example.local

sentry:
  # Name of AWS secret containing `authToken` key
  authTokenSecretsManagerSecretName: genius-core-admin-sentry-auth-token

# -- Secret configuration
configSecret: |
  NEXT_PUBLIC_APP_GENIUS_DB_URL='http://genius-core:50052'
  UNLEASH_SERVER_API_URL=''
  UNLEASH_SERVER_API_TOKEN=''
  NEXT_PUBLIC_UNLEASH_SERVER_API_URL=''
  NEXT_PUBLIC_UNLEASH_FRONTEND_API_TOKEN=''
  SENTRY_AUTH_TOKEN=''
  AUTH_URL={{ printf "https://%s" .Values.externalDomain | squote }}
  AUTH_SECRET={{ randAlphaNum 32 | squote }}
  CLIENT_ID=''
  CLIENT_SECRET=''
  ISSUER_BASE_URL=''
  AUDIENCE=''
  AUTH_SCOPE='openid profile email'

# -- Name of existing secret containing env configuration
configExistingSecret: ""

# Default values for genius-core-admin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 518625631402.dkr.ecr.us-west-1.amazonaws.com/versestech/genius-core-admin
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: '{{ include "genius-core-admin.fullname" . }}'
              port:
                number: '{{ .Values.service.port }}'
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

httpRoute:
  enabled: false
  # Annotations to add to the HttpRoute
  annotations: {}
  hostnames: []
    # - chart-example.local
    # - chart-example-ws.local
  parentRefs: []
    # - name: example-gateway
    #   namespace: example-gateway-ns
    #   sectionName: example-gateway-section
  rules:
    - matches:
        - headers:
            - type: Exact
              name: host
              value: chart-example.local
          path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: '{{ include "genius-core-admin.fullname" . }}'
          port: '{{ .Values.service.port }}'
      filters: []
        # - type: RequestHeaderModifier
        #   requestHeaderModifier:
        #     add:
        #       - name: my-header
        #         value: foo

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

pdb:
  enabled: false
  minAvailable: ""
  maxUnavailable: ""

# -- Extra K8s manifests to deploy
## Note: Supports use of custom Helm templates
extraObjects: []
