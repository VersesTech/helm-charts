# -- Externally reachable domain
externalDomain: chart-example.local

geniusCoreUrl: http://genius-core:50052

# -- Auth configuration
auth:
  # -- Auth secret. Can be generated with `openssl rand -hex 32`. Defaults to a helm autogenerated value.
  secret: ""
  # -- Issuer URL
  issuerUrl: ""
  # -- Client ID
  clientId: ""
  # -- Client Secret
  clientSecret: ""
  # -- Audience (optional)
  audience: genius-core
  # -- Space-separated list of OIDC scopes
  scopes: openid profile email

# -- Secret configuration
config: |
  NEXT_PUBLIC_APP_GENIUS_DB_URL={{ .Values.geniusCoreUrl | squote }}
  AUTH_URL={{ printf "https://%s/api/auth" .Values.externalDomain | squote }}
  AUTH_SECRET={{ .Values.auth.secret | randAlphaNum 32 | squote }}
  CLIENT_ID={{ .Values.auth.clientId | squote }}
  CLIENT_SECRET={{ .Values.auth.clientSecret | squote }}
  ISSUER_BASE_URL={{ .Values.auth.issuerUrl | squote }}
  AUDIENCE={{ .Values.auth.audience | squote }}
  AUTH_SCOPE={{ .Values.auth.scopes | squote }}

# -- Reference an existing secret containing the env configuration
configExistingSecret:
  # -- Name of the secret. The key inside the secret must be `.env.production`
  name: ""

replicaCount: 1

image:
  repository: ghcr.io/versestech/helm-charts/genius-core-admin
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 65532

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: '{{ include "genius-core-admin.fullname" . }}'
              port:
                number: '{{ .Values.service.port }}'
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

httpRoute:
  enabled: false
  # Annotations to add to the HttpRoute
  annotations: {}
  hostnames: []
    # - chart-example.local
    # - chart-example-ws.local
  parentRefs: []
    # - name: example-gateway
    #   namespace: example-gateway-ns
    #   sectionName: example-gateway-section
  rules:
    - matches:
        - headers:
            - type: Exact
              name: host
              value: chart-example.local
          path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: '{{ include "genius-core-admin.fullname" . }}'
          port: '{{ .Values.service.port }}'
      filters: []
        # - type: RequestHeaderModifier
        #   requestHeaderModifier:
        #     add:
        #       - name: my-header
        #         value: foo

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

pdb:
  enabled: false
  minAvailable: ""
  maxUnavailable: ""

# -- Extra K8s manifests to deploy
## Note: Supports use of custom Helm templates
extraObjects: []
